+ set -v

# Load module with icc compiler
module load intel
+ module load intel
+ local _mlredir=0
+ '[' -n '' ']'
+ case " $@ " in
+ '[' 0 -eq 0 ']'
+ _module_raw load intel
++ /usr/bin/tclsh /apps/modules/modulecmd.tcl bash load intel
+ eval ''
+ _mlstatus=0
+ return 0

module load likwid/5.3.0
+ module load likwid/5.3.0
+ local _mlredir=0
+ '[' -n '' ']'
+ case " $@ " in
+ '[' 0 -eq 0 ']'
+ _module_raw load likwid/5.3.0
++ /usr/bin/tclsh /apps/modules/modulecmd.tcl bash load likwid/5.3.0
+ eval ''
+ _mlstatus=0
+ return 0

# TODO allocate a compute node

# This line creates / overrides a result csv file
echo "ArraySize,MegaUpdatesPerSecond,ActualRuntime,MinimalRuntime,EdgeSize,NumberOfThreads" > result_thread_likwidpin.csv
+ echo ArraySize,MegaUpdatesPerSecond,ActualRuntime,MinimalRuntime,EdgeSize,NumberOfThreads

# TODO run benchmark 1
# execute measurement with for loop
# 32 measurement points, exponentially distributed: 1 Mib - 16 GiB, each with 1000 ms as minimal runtime
# results should be appended to the result.csv (see >> operator)
#root31(2^14) ^ i = e(i*ln(2^14)/31)

#for 4GiB
for i in {1..20}; do
    if [ $i -le 10 ]; then
        likwid_option="E:S0:$i"
    else
        cores=$(($i-10))
        likwid_option="E:S0:10@S1:$cores"
    fi 
    likwid-pin -q -c $likwid_option ../bin/jacobi 4096 1000 $i >>result_thread_likwidpin.csv
# srun ../bin/jacobi 1 1000 3 >>result_thread_likwidpin.csv
done
+ for i in {1..20}
+ '[' 1 -le 10 ']'
+ likwid_option=E:S0:1
+ likwid-pin -q -c E:S0:1 ../bin/jacobi 4096 1000 1
+ for i in {1..20}
+ '[' 2 -le 10 ']'
+ likwid_option=E:S0:2
+ likwid-pin -q -c E:S0:2 ../bin/jacobi 4096 1000 2
+ for i in {1..20}
+ '[' 3 -le 10 ']'
+ likwid_option=E:S0:3
+ likwid-pin -q -c E:S0:3 ../bin/jacobi 4096 1000 3
+ for i in {1..20}
+ '[' 4 -le 10 ']'
+ likwid_option=E:S0:4
+ likwid-pin -q -c E:S0:4 ../bin/jacobi 4096 1000 4
+ for i in {1..20}
+ '[' 5 -le 10 ']'
+ likwid_option=E:S0:5
+ likwid-pin -q -c E:S0:5 ../bin/jacobi 4096 1000 5
+ for i in {1..20}
+ '[' 6 -le 10 ']'
+ likwid_option=E:S0:6
+ likwid-pin -q -c E:S0:6 ../bin/jacobi 4096 1000 6
+ for i in {1..20}
+ '[' 7 -le 10 ']'
+ likwid_option=E:S0:7
+ likwid-pin -q -c E:S0:7 ../bin/jacobi 4096 1000 7
+ for i in {1..20}
+ '[' 8 -le 10 ']'
+ likwid_option=E:S0:8
+ likwid-pin -q -c E:S0:8 ../bin/jacobi 4096 1000 8
+ for i in {1..20}
+ '[' 9 -le 10 ']'
+ likwid_option=E:S0:9
+ likwid-pin -q -c E:S0:9 ../bin/jacobi 4096 1000 9
+ for i in {1..20}
+ '[' 10 -le 10 ']'
+ likwid_option=E:S0:10
+ likwid-pin -q -c E:S0:10 ../bin/jacobi 4096 1000 10
+ for i in {1..20}
+ '[' 11 -le 10 ']'
+ cores=1
+ likwid_option=E:S0:10@S1:1
+ likwid-pin -q -c E:S0:10@S1:1 ../bin/jacobi 4096 1000 11
+ for i in {1..20}
+ '[' 12 -le 10 ']'
+ cores=2
+ likwid_option=E:S0:10@S1:2
+ likwid-pin -q -c E:S0:10@S1:2 ../bin/jacobi 4096 1000 12
+ for i in {1..20}
+ '[' 13 -le 10 ']'
+ cores=3
+ likwid_option=E:S0:10@S1:3
+ likwid-pin -q -c E:S0:10@S1:3 ../bin/jacobi 4096 1000 13
+ for i in {1..20}
+ '[' 14 -le 10 ']'
+ cores=4
+ likwid_option=E:S0:10@S1:4
+ likwid-pin -q -c E:S0:10@S1:4 ../bin/jacobi 4096 1000 14
+ for i in {1..20}
+ '[' 15 -le 10 ']'
+ cores=5
+ likwid_option=E:S0:10@S1:5
+ likwid-pin -q -c E:S0:10@S1:5 ../bin/jacobi 4096 1000 15
+ for i in {1..20}
+ '[' 16 -le 10 ']'
+ cores=6
+ likwid_option=E:S0:10@S1:6
+ likwid-pin -q -c E:S0:10@S1:6 ../bin/jacobi 4096 1000 16
+ for i in {1..20}
+ '[' 17 -le 10 ']'
+ cores=7
+ likwid_option=E:S0:10@S1:7
+ likwid-pin -q -c E:S0:10@S1:7 ../bin/jacobi 4096 1000 17
+ for i in {1..20}
+ '[' 18 -le 10 ']'
+ cores=8
+ likwid_option=E:S0:10@S1:8
+ likwid-pin -q -c E:S0:10@S1:8 ../bin/jacobi 4096 1000 18
+ for i in {1..20}
+ '[' 19 -le 10 ']'
+ cores=9
+ likwid_option=E:S0:10@S1:9
+ likwid-pin -q -c E:S0:10@S1:9 ../bin/jacobi 4096 1000 19
+ for i in {1..20}
+ '[' 20 -le 10 ']'
+ cores=10
+ likwid_option=E:S0:10@S1:10
+ likwid-pin -q -c E:S0:10@S1:10 ../bin/jacobi 4096 1000 20

# Note: copy the result.csv to a local machine!

touch ready
+ touch ready

